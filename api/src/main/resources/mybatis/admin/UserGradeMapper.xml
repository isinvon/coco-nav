<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.project.admin.mapper.UserGradeMapper">
    
    <resultMap type="UserGrade" id="UserGradeResult">
        <result property="userGradeId"    column="user_grade_id"    />
        <result property="gradeName"    column="grade_name"    />
        <result property="minPoints"    column="min_points"    />
        <result property="privileges"    column="privileges"    />
        <result property="icon"    column="icon"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectUserGradeVo">
        select user_grade_id, grade_name, min_points, privileges, icon, create_time, update_time from coco_user_grade
    </sql>

    <select id="selectUserGradeList" parameterType="UserGrade" resultMap="UserGradeResult">
        <include refid="selectUserGradeVo"/>
        <where>  
            <if test="gradeName != null  and gradeName != ''"> and grade_name like concat('%', #{gradeName}, '%')</if>
            <if test="minPoints != null "> and min_points = #{minPoints}</if>
            <if test="privileges != null  and privileges != ''"> and privileges = #{privileges}</if>
            <if test="icon != null  and icon != ''"> and icon = #{icon}</if>
        </where>
    </select>
    
    <select id="selectUserGradeByUserGradeId" parameterType="Long" resultMap="UserGradeResult">
        <include refid="selectUserGradeVo"/>
        where user_grade_id = #{userGradeId}
    </select>

    <insert id="insertUserGrade" parameterType="UserGrade" useGeneratedKeys="true" keyProperty="userGradeId">
        insert into coco_user_grade
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="gradeName != null and gradeName != ''">grade_name,</if>
            <if test="minPoints != null">min_points,</if>
            <if test="privileges != null">privileges,</if>
            <if test="icon != null">icon,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="gradeName != null and gradeName != ''">#{gradeName},</if>
            <if test="minPoints != null">#{minPoints},</if>
            <if test="privileges != null">#{privileges},</if>
            <if test="icon != null">#{icon},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updateUserGrade" parameterType="UserGrade">
        update coco_user_grade
        <trim prefix="SET" suffixOverrides=",">
            <if test="gradeName != null and gradeName != ''">grade_name = #{gradeName},</if>
            <if test="minPoints != null">min_points = #{minPoints},</if>
            <if test="privileges != null">privileges = #{privileges},</if>
            <if test="icon != null">icon = #{icon},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where user_grade_id = #{userGradeId}
    </update>

    <delete id="deleteUserGradeByUserGradeId" parameterType="Long">
        delete from coco_user_grade where user_grade_id = #{userGradeId}
    </delete>

    <delete id="deleteUserGradeByUserGradeIds" parameterType="String">
        delete from coco_user_grade where user_grade_id in 
        <foreach item="userGradeId" collection="array" open="(" separator="," close=")">
            #{userGradeId}
        </foreach>
    </delete>
</mapper>