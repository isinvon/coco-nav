<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.project.admin.mapper.SettingLogMapper">
    
    <resultMap type="SettingLog" id="SettingLogResult">
        <result property="settingLogId"    column="setting_log_id"    />
        <result property="settingKey"    column="setting_key"    />
        <result property="oldValue"    column="old_value"    />
        <result property="newValue"    column="new_value"    />
        <result property="operatorId"    column="operator_id"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectSettingLogVo">
        select setting_log_id, setting_key, old_value, new_value, operator_id, create_time, update_time from coco_setting_log
    </sql>

    <select id="selectSettingLogList" parameterType="SettingLog" resultMap="SettingLogResult">
        <include refid="selectSettingLogVo"/>
        <where>  
            <if test="settingKey != null  and settingKey != ''"> and setting_key = #{settingKey}</if>
            <if test="oldValue != null  and oldValue != ''"> and old_value = #{oldValue}</if>
            <if test="newValue != null  and newValue != ''"> and new_value = #{newValue}</if>
            <if test="operatorId != null "> and operator_id = #{operatorId}</if>
        </where>
    </select>
    
    <select id="selectSettingLogBySettingLogId" parameterType="Long" resultMap="SettingLogResult">
        <include refid="selectSettingLogVo"/>
        where setting_log_id = #{settingLogId}
    </select>

    <insert id="insertSettingLog" parameterType="SettingLog" useGeneratedKeys="true" keyProperty="settingLogId">
        insert into coco_setting_log
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="settingKey != null and settingKey != ''">setting_key,</if>
            <if test="oldValue != null">old_value,</if>
            <if test="newValue != null and newValue != ''">new_value,</if>
            <if test="operatorId != null">operator_id,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="settingKey != null and settingKey != ''">#{settingKey},</if>
            <if test="oldValue != null">#{oldValue},</if>
            <if test="newValue != null and newValue != ''">#{newValue},</if>
            <if test="operatorId != null">#{operatorId},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updateSettingLog" parameterType="SettingLog">
        update coco_setting_log
        <trim prefix="SET" suffixOverrides=",">
            <if test="settingKey != null and settingKey != ''">setting_key = #{settingKey},</if>
            <if test="oldValue != null">old_value = #{oldValue},</if>
            <if test="newValue != null and newValue != ''">new_value = #{newValue},</if>
            <if test="operatorId != null">operator_id = #{operatorId},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where setting_log_id = #{settingLogId}
    </update>

    <delete id="deleteSettingLogBySettingLogId" parameterType="Long">
        delete from coco_setting_log where setting_log_id = #{settingLogId}
    </delete>

    <delete id="deleteSettingLogBySettingLogIds" parameterType="String">
        delete from coco_setting_log where setting_log_id in 
        <foreach item="settingLogId" collection="array" open="(" separator="," close=")">
            #{settingLogId}
        </foreach>
    </delete>
</mapper>