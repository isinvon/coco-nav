<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.project.admin.mapper.UserLoginLogMapper">
    
    <resultMap type="UserLoginLog" id="UserLoginLogResult">
        <result property="userLoginLogId"    column="user_login_log_id"    />
        <result property="userId"    column="user_id"    />
        <result property="loginIp"    column="login_ip"    />
        <result property="device"    column="device"    />
        <result property="loginTime"    column="login_time"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectUserLoginLogVo">
        select user_login_log_id, user_id, login_ip, device, login_time, create_time, update_time from coco_user_login_log
    </sql>

    <select id="selectUserLoginLogList" parameterType="UserLoginLog" resultMap="UserLoginLogResult">
        <include refid="selectUserLoginLogVo"/>
        <where>  
            <if test="userId != null "> and user_id = #{userId}</if>
            <if test="loginIp != null  and loginIp != ''"> and login_ip = #{loginIp}</if>
            <if test="device != null  and device != ''"> and device = #{device}</if>
            <if test="loginTime != null "> and login_time = #{loginTime}</if>
        </where>
    </select>
    
    <select id="selectUserLoginLogByUserLoginLogId" parameterType="Long" resultMap="UserLoginLogResult">
        <include refid="selectUserLoginLogVo"/>
        where user_login_log_id = #{userLoginLogId}
    </select>

    <insert id="insertUserLoginLog" parameterType="UserLoginLog" useGeneratedKeys="true" keyProperty="userLoginLogId">
        insert into coco_user_login_log
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">user_id,</if>
            <if test="loginIp != null and loginIp != ''">login_ip,</if>
            <if test="device != null">device,</if>
            <if test="loginTime != null">login_time,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">#{userId},</if>
            <if test="loginIp != null and loginIp != ''">#{loginIp},</if>
            <if test="device != null">#{device},</if>
            <if test="loginTime != null">#{loginTime},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updateUserLoginLog" parameterType="UserLoginLog">
        update coco_user_login_log
        <trim prefix="SET" suffixOverrides=",">
            <if test="userId != null">user_id = #{userId},</if>
            <if test="loginIp != null and loginIp != ''">login_ip = #{loginIp},</if>
            <if test="device != null">device = #{device},</if>
            <if test="loginTime != null">login_time = #{loginTime},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where user_login_log_id = #{userLoginLogId}
    </update>

    <delete id="deleteUserLoginLogByUserLoginLogId" parameterType="Long">
        delete from coco_user_login_log where user_login_log_id = #{userLoginLogId}
    </delete>

    <delete id="deleteUserLoginLogByUserLoginLogIds" parameterType="String">
        delete from coco_user_login_log where user_login_log_id in 
        <foreach item="userLoginLogId" collection="array" open="(" separator="," close=")">
            #{userLoginLogId}
        </foreach>
    </delete>
</mapper>